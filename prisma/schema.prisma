// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum RequestStatus {
  NEW
  SCHEDULED
  CANCELLED
  COMPLETED
}

enum CalloutStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  name         String?
  passwordHash String?
  role         Role         @default(USER)
  requests     JobRequest[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Provider {
  id        Int       @id @default(autoincrement())
  name      String
  email     String?   @unique
  phone     String?
  city      String?
  timezone  String?
  notes     String?
  address   String?
  website   String?
  services  String?
  category  String?
  callouts  Callout[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([name])
  @@index([city])
}

model JobRequest {
  id          Int           @id @default(autoincrement())
  userId      Int
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    String?
  description String?
  location    String?
  status      RequestStatus @default(NEW)
  callouts    Callout[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Callout {
  id         Int           @id @default(autoincrement())
  requestId  Int
  request    JobRequest    @relation(fields: [requestId], references: [id], onDelete: Cascade)
  providerId Int
  provider   Provider      @relation(fields: [providerId], references: [id], onDelete: Cascade)
  startTime  DateTime?
  endTime    DateTime?
  status     CalloutStatus @default(PENDING)
  notes      String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@index([requestId])
  @@index([providerId])
}
